[project]
name = "screens"
description = "Pulsar scintillation screens"
readme = { file = "README.rst", content-type = "text/x-rst" }
requires-python = ">=3.10"
license = { text = "GNU GPL v3+" }
authors = [
  { name = "Marten H. van Kerkwijk", email = "mhvk@astro.utoronto.ca"},
  { name = "Rik van Lieshout" },
]
dynamic = ["version"]
dependencies = [
    "astropy>=5.0",
    "scipy",
    "baseband-tasks[io]",
    "matplotlib",
]

[project.optional-dependencies]
test = [
  "pytest-astropy",
]
docs = [
  "sphinx-astropy",
  "jupyter-sphinx",
  "uncertainties",
  "corner",
]

[project.urls]
repository = "https://github.com/mhvk/screens"
documentation = "https://screens.readthedocs.io/"

[project.entry-points."baseband.tasks"]
base = "screens.base"
SetAttribute = "screens.base:SetAttribute"
Task = "screens.base:Task"
channelize = "screens.channelize:__all__"
combining = "screens.combining:__all__"
conversion = "screens.conversion:__all__"
convolution = "screens.convolution:__all__"
dispersion = "screens.dispersion:__all__"
functions = "screens.functions:__all__"
integration = "screens.integration:__all__"
pfb = "screens.pfb:__all__"
sampling = "screens.sampling:__all__"
shaping = "screens.shaping:__all__"
fourier = "screens.fourier"
dm = "screens.dm"
phases = "screens.phases"
generators = "screens.generators"

[project.entry-points."baseband.io"]
hdf5 = "screens.io.hdf5"

[build-system]
requires = [
  "setuptools",
  "setuptools_scm>=8.0.0",
]
build-backend = 'setuptools.build_meta'

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE", "licenses/*.rst"]

[tool.setuptools.packages.find]
include = ["screens*"]

[tool.setuptools.package-data]
"*" = ["data/*"]

[tool.setuptools_scm]
write_to = "screens/_version.py"

[tool.pytest.ini_options]
testpaths = [
  "screens",
  "docs",
]
astropy_header = true
astropy_header_packages = [
  "astropy",
  "numpy",
  "scipy",
  "baseband_tasks",
]
doctest_plus = "enabled"
text_file_format = "rst"
addopts = "--color=yes --doctest-rst"
filterwarnings = [
  "error",
  "ignore:::pytest_doctestplus",
  # vvv general numpy warnings
  "ignore:numpy.ufunc size changed:RuntimeWarning",
  "ignore:numpy.ndarray size changed:RuntimeWarning",
  "ignore:datetime.datetime.utcfromtimestamp:DeprecationWarning",
]

[tool.coverage.run]
omit = [
  "screens/__init*",
  "screens/*setup_package*",
  "screens/tests/*",
  "screens/*/tests/*",
  "screens/_version*",
  "*/screens/__init*",
  "*/screens/*setup_package*",
  "*/screens/tests/*",
  "*/screens/*/tests/*",
  "*/screens/_version*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
  # typing.TYPE_CHECKING is False at runtime
  "if TYPE_CHECKING:",
  # Ignore typing overloads
  "@overload",
]